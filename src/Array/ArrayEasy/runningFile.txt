//        int ans = new SecondLargest().secLargest(arr);
//        boolean ans = new IsSortedAndRotated().output(arr);
//        int ans = new RemoveDuplicate().output(arr);
//        System.out.println(ans);

//        new RotateArray().output(arr,4,"left");
//        new Move0sToEnd().output(arr);
//        System.out.println(Arrays.toString(arr));

//        int[] arr1 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
//        int[] arr2 = {2, 3, 4, 4, 5, 11, 12};
//        List<Integer> res =new UnionTwoArray().output(arr1,arr2);
//        System.out.println(res);

//        int[] arr = {1, 2,3, 5};
//        int res = new FindMissingNum().output(arr);
//        System.out.println(res);

//        int[] arr = {1, 1, 0, 1, 1, 1};
//        int res = new MaxConsecutiveOnes().output(arr);
//        System.out.println(res);

//        int arr[] = {4,1,2,1,4,2,7};
//        int res = new SingleNum().output(arr);
//        System.out.println(res);

//        int[] arr = {2,3,5};
//        int res = new LongSubArrSumK().output(arr,5);
//        System.out.println(res);